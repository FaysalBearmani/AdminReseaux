////////////// DOCUMENTATION OFFICIELLE///////////////////

Source: https://hub.docker.com/r/mysql/mysql-server/
-----------------------------------------------------

CONNXECT FROM ANOTHER CONTAINER
Connect to MySQL from an Application in Another Docker Container
	-> docker run --name app-container-name --link my-container-name:mysql -d app-that-uses-mysql

-----------------------------------------------------	
CONNECT FROM MYSQL COMMAND LINE	
The following command starts a new process inside an existing MySQL container instance
 and runs the mysql command line client against your original MySQL server, 
 allowing you to execute SQL statements against your database:
	-> docker exec -it my-container-name mysql -uroot -p
... where my-container-name is the name of your original MySQL Server container. 
Note that if the main container process (the server) exits, the process started by exec will also exit.

-----------------------------------------------------
 CUSTOM CREATION SCRIPT
When you start the MySQL image, you can adjust the configuration of the MySQL instance by passing
 one or more environment variables on the docker run command line. 
 Do note that none of the variables below will have any effect if you start the container
 with a data directory that already contains a database: 
 any pre-existing database will always be left untouched on container startup.
 
 -----------------------------------------------------
 PORT FORWARDING
 Docker allows mapping of ports on the container to ports on the host system by using the -p option. 
 If you start the container as follows, you can connect to the database by connecting your client to a port on the host machine, in this example port 6603:
	-> docker run --name my-container-name -p 6603:3306 -d mysql/mysql-server
	
 -----------------------------------------------------
 
 PASSING OPTIONS TO THE SERVER
	-> docker run --name my-container-name -d mysql/mysql-server --character-set-server=utf8 --collation-server=utf8_general_ci

	
	
////////////// EXEMPLE DE MISE EN PLACE///////////////////

source: http://www.dwmkerr.com/learn-docker-by-building-a-microservice/
-----------------------------------------------------
source: http://datacharmer.blogspot.be/2015/10/mysql-docker-operations-part-1-getting.html
-----------------------------------------------------
source: https://github.com/mysql/mysql-docker
-----------------------------------------------------
/////////////////// NOTRE CONFIG ////////////////////////

installation de l'image mysql server dans un container dédié.
nom de la database "db", password de root "123", port exposé à l'extérieur "3307",port coté docker "3306" 

    docker run --name db -d -e MYSQL_ROOT_PASSWORD=123 -p 3307:3307 mysql:latest
    

On peut aussi lier mysql au container qui va l'utiliser avec l'option --link

    docker run --name app-container-name --link my-container-name:mysql -d app-that-uses-mysql 

/!\ There are basically two ways to store data used by applications that run in Docker containers. 
We encourage users of MySQL with Docker to familiarize themselves with the options available, including:
	
Let Docker manage the storage of your database data by writing the database files to disk on the host system using its own internal volume management. 
This is the default and is easy and fairly transparent to the user. The downside is that the files may be hard to locate for tools and applications that run directly on the host system, i.e. outside containers.
	OR
Create a data directory on the host system (outside the container) and mount this to a directory visible from inside the container. 
This places the database files in a known location on the host system, and makes it easy for tools and applications on the host system to access the files. 
The downside is that the user needs to make sure that the directory exists, and that e.g. directory permissions and other security mechanisms on the host system are set up correctly.
	1) Create a data directory on a suitable volume on your host system, e.g. /my/own/datadir.
	2) Start your MySQL container like this:
		docker run --name my-container-name -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql/mysql-server:tag
		
Exécution de mysql server en ligne de commande à l'intérieur de notre container

    docker exec -it db /bin/bash

Connection à la base de donnée avec le compte root

    mysql -uroot -p123

creation d'une base de donnée intitulée "groupe12"

    create database groupe12;

Utilisation de la database "groupe12"

    use groupe12;
 
Création d'une table "tbtest" contenant nos noms et prénoms
 
    create table tbtest(nom varchar(32), prenom varchar(16));

Insertion de valeurs dans noter db

    insert into tbtest (nom, prenom) values("Bearmani", "Faysal"),("Bastiaens","Olivier"),("Pire","Joseph");
